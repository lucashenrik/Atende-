{"ast":null,"code":"// src/Login.js\nimport React, { useState } from 'react';\n/*\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Construa o cabeçalho de autenticação básica\r\n    const authHeader = 'Basic ' + btoa(username + ':' + password);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/pedido/lista-pedidos', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': authHeader,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Armazene o token no localStorage\r\n        const token = btoa(username + ':' + password);\r\n        localStorage.setItem('authToken', token);\r\n        alert('Login bem-sucedido');\r\n      } else {\r\n        setError('Credenciais inválidas');\r\n      }\r\n    } catch (error) {\r\n      setError('Erro ao tentar login');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label>\r\n            Usuário:\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Senha:\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\n\nconst username = 'admin';\nconst password = 'admin123';\nconst token = btoa(`${username}:${password}`); // Codifica as credenciais em Base64\n\nfetch('http://localhost:8080/pedido/notificacoes', {\n  headers: {\n    'Authorization': `Basic ${token}`\n  }\n}).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));","map":{"version":3,"names":["React","useState","username","password","token","btoa","fetch","headers","then","response","json","data","console","log","catch","error"],"sources":["C:/Users/Lucas/Documents/Projetos/demo/demo/src/frontEnd/react/app/src/componentes/Login.jsx"],"sourcesContent":["// src/Login.js\r\nimport React, { useState } from 'react';\r\n/*\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Construa o cabeçalho de autenticação básica\r\n    const authHeader = 'Basic ' + btoa(username + ':' + password);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/pedido/lista-pedidos', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': authHeader,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Armazene o token no localStorage\r\n        const token = btoa(username + ':' + password);\r\n        localStorage.setItem('authToken', token);\r\n        alert('Login bem-sucedido');\r\n      } else {\r\n        setError('Credenciais inválidas');\r\n      }\r\n    } catch (error) {\r\n      setError('Erro ao tentar login');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label>\r\n            Usuário:\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Senha:\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\r\n\r\nconst username = 'admin';\r\nconst password = 'admin123';\r\nconst token = btoa(`${username}:${password}`); // Codifica as credenciais em Base64\r\n\r\nfetch('http://localhost:8080/pedido/notificacoes', {\r\n  headers: {\r\n    'Authorization': `Basic ${token}`\r\n  }\r\n})\r\n.then(response => response.json())\r\n.then(data => console.log(data))\r\n.catch(error => console.error('Error:', error));"],"mappings":"AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,OAAO;AACxB,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,KAAK,GAAGC,IAAI,CAAC,GAAGH,QAAQ,IAAIC,QAAQ,EAAE,CAAC,CAAC,CAAC;;AAE/CG,KAAK,CAAC,2CAA2C,EAAE;EACjDC,OAAO,EAAE;IACP,eAAe,EAAE,SAASH,KAAK;EACjC;AACF,CAAC,CAAC,CACDI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}