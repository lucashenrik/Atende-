package com.lucas.demo.service;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.lucas.demo.model.User;
import com.lucas.demo.model.UserData;

import infra.PasswordUtil;

@Service
public class AuthService {

	PasswordUtil passwordUtil;

	String caminho = "C:\\Users\\Lucas\\Documents\\Projetos\\demo\\user.json";
	// private static final String USERS_FILE = "user.json";

	public boolean autenticacao(String username, String password) {
        try {
        	
        	BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
        	String hashedPassword = encoder.encode("senha123");
        	System.out.println(hashedPassword);
            // Carregar o arquivo JSON
            ObjectMapper objectMapper = new ObjectMapper();
            UserData userData = objectMapper.readValue(new File(caminho), UserData.class);
            List<User> users = userData.getUsers();

            // Criar inst√¢ncia do BCryptPasswordEncoder
            //BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();

            // Verifica se o username e a senha correspondem
            for (User user : users) {
                if (user.getUsername().equals(username)) {
                    // Comparar a senha fornecida em texto puro com o hash armazenado
                    if (encoder.matches(password, user.getPassword())) {
                        return true; // Login bem-sucedido
                    } else {
                        System.out.println("Senha incorreta");
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return false; // Login falhou
    }
}
