// src/Login.js
import React, { useState } from 'react';
/*
const Login = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');

  const handleLogin = async (event) => {
    event.preventDefault();

    // Construa o cabeçalho de autenticação básica
    const authHeader = 'Basic ' + btoa(username + ':' + password);

    try {
      const response = await fetch('http://localhost:8080/pedido/lista-pedidos', {
        method: 'GET',
        headers: {
          'Authorization': authHeader,
        },
      });

      if (response.ok) {
        // Armazene o token no localStorage
        const token = btoa(username + ':' + password);
        localStorage.setItem('authToken', token);
        alert('Login bem-sucedido');
      } else {
        setError('Credenciais inválidas');
      }
    } catch (error) {
      setError('Erro ao tentar login');
    }
  };

  return (
    <div>
      <h2>Login</h2>
      <form onSubmit={handleLogin}>
        <div>
          <label>
            Usuário:
            <input
              type="text"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
              required
            />
          </label>
        </div>
        <div>
          <label>
            Senha:
            <input
              type="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />
          </label>
        </div>
        <button type="submit">Login</button>
        {error && <p style={{ color: 'red' }}>{error}</p>}
      </form>
    </div>
  );
};

export default Login;*/

const username = 'admin';
const password = 'admin123';
const token = btoa(`${username}:${password}`); // Codifica as credenciais em Base64

fetch('http://localhost:8080/pedido/notificacoes', {
  headers: {
    'Authorization': `Basic ${token}`
  }
})
.then(response => response.json())
.then(data => console.log(data))
.catch(error => console.error('Error:', error));