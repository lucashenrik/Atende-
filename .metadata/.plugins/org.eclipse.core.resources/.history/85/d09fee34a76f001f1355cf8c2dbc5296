package com.lucas.demo.service;

import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Service;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.lucas.demo.model.Item;

@Service
public class PedidoServico {

	@Lazy
	@Autowired
	ArquivoService arquivoServ;
	
	private List<Map<String, String>> pedidoList = new ArrayList<>();

	public Item xmlParaPedido(String xml) throws JAXBException {

		// Cria o contexto JAXB para a classe Pedido
		JAXBContext context = JAXBContext.newInstance(Item.class);

		// Cria o Unmarshaller, que transforma o XML em objeto
		Unmarshaller unmarshaller = context.createUnmarshaller();

		// Converte o XML (em String) para um objeto Pedido
		StringReader reader = new StringReader(xml);
		Item item = (Item) unmarshaller.unmarshal(reader);

		return item;
	}

	public String urlGet(String noticacaoCode) {

		String urlGet = "https://ws.pagseguro.uol.com.br/v3/transactions/notifications/" + noticacaoCode
				+ "?{{credenciais}}";

		return urlGet;
	}

	public String urlProcess(String notificacaoCode) {
		String urlProcess = "http://localhost:8080/pedido/processar-notificacao?notificacaoCode=" + notificacaoCode;

		return urlProcess;
	}

	public void processarItens(String json) {
		ObjectMapper objectMapper = new ObjectMapper();

		try {
			JsonNode rootNode = objectMapper.readTree(json);
			JsonNode itemsNode = rootNode.path("items");

			if (itemsNode.isArray()) {
				List<Item> items = new ArrayList<>();
				
				for (JsonNode itemNode : itemsNode) {
					Item item = objectMapper.treeToValue(itemNode, Item.class);
					items.add(item);
				}
				
				// Exibir os itens
				for (Item item : items) {
					arquivoServ.escreverPedido(item);
					System.out.println("Item: " + item);
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void adicionarPedido(Item item) {
		int id = item.getReferenceId();
		int quantity = item.getQuantity();
		String description = item.getName();
		
		Map<String, String> novoItem = new HashMap<>();
		novoItem.put("reference_id", String.valueOf(id));
		novoItem.put("quantity", String.valueOf(quantity));
		novoItem.put("description", description);
		
		pedidoList.add(novoItem);
		
		System.out.println(pedidoList);
	}
	
	
	
}
