package com.lucas.demo.service;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.lucas.demo.model.Pedido;

@Service
public class ArquivoService {

	public void escreverCodigo(String notificationCode) {

		ObjectMapper mapper = new ObjectMapper();

		List<Map<String, String>> codigosList = new ArrayList<>();
		
		LocalDate data = LocalDate.now(); 
		
		// Especifica o caminho onde o arquivo será salvo
	    String diretorio = "C:\\Users\\Lucas\\Documents\\Projetos\\demo\\Registros\\Codigos-de-notificacao";
	    String caminhoArq = diretorio + "\\notificacaoCode_" + data + ".json"; 

	    // Cria o diretório se ele não existir
	    File directory = new File(diretorio);
	    if (!directory.exists()) {
	        directory.mkdirs();  // Cria o diretório, incluindo todos os diretórios necessários
	    }

	    // Verifica se o arquivo já existe e, se existir, carrega a lista de códigos existente
	    File file = new File(caminhoArq);
	    if (file.exists()) {
	        try {
	        	codigosList = mapper.readValue(file, List.class);  // Lê o arquivo existente e converte em lista
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	    }

	    // Adiciona o novo código à lista
	    Map<String, String> code = new HashMap<>();
	    code.put("notificationCode", notificationCode);
	    codigosList.add(code);

	    // Salva a lista atualizada de volta ao arquivo
	    try (PrintWriter escrever = new PrintWriter(new FileWriter(caminhoArq))) {
	        String json = mapper.writeValueAsString(codigosList);
	        escrever.println(json);  // Grava a lista inteira no arquivo
	    } catch (IOException e) {
	        e.printStackTrace();
	    }

	}
	
	public void escreverPedido(Pedido pedido) {

		ObjectMapper mapper = new ObjectMapper();

		int id = pedido.getId();
		int quantity = pedido.getQuantity();
		String description = pedido.getDescription();
		
		Map<String, String> data = new HashMap<>();
		data.put("id", String.valueOf(id)); 
		data.put("quantity", String.valueOf(quantity));
		data.put("description", description);

		try {
			 // Escreve o Map no arquivo JSON
            mapper.writeValue(new File("pedido.json"), data);
            System.out.println("Pedido salvo em formato JSON com sucesso.");
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Erro ao salvar o pedido em formato JSON.");
        }
    }
}
