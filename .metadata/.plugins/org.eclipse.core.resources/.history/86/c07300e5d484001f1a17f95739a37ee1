package com.lucas.demo.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.lucas.demo.service.AuthService;

import jakarta.servlet.http.HttpSession;

@RestController
@RequestMapping("/auth")
public class LoginControler {

	@Autowired
	private AuthService authService;
	
	 @Autowired
	    private AuthenticationManager authenticationManager;
	
	/*@PostMapping("/login")
	public String login(@RequestParam String username, @RequestParam String password, HttpSession session) {
		if (authService.autenticacao(username, password)){
			session.setAttribute("user", username);
			return "Login sucesso!";
		}
		
		return "Login Invalido";
	}*/
	 @PostMapping("/login")
	    public ResponseEntity<String> login(@RequestParam String username, @RequestParam String password) {
	        try {
	            // Forçar a autenticação
	            Authentication authentication = authenticationManager.authenticate(
	                new UsernamePasswordAuthenticationToken(username, password)
	            );
	            SecurityContextHolder.getContext().setAuthentication(authentication);
	            return ResponseEntity.ok("Login bem-sucedido");
	        } catch (BadCredentialsException e) {
	            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Credenciais inválidas");
	        }
	    }
	
	@GetMapping("/rota-protegida")
	public String rotaProtegida(HttpSession session) {
		if (session.getAttribute("user") != null) {
			return "Bem vindo!!!";
		}
		
		return "Voce precisa estar logado";
	}
}
