package com.lucas.demo.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.lucas.demo.model.Item;
import com.lucas.demo.service.ArquivoService;
import com.lucas.demo.service.PedidoServico;

@RestController
@RequestMapping("/pedido")
public class PedidoControler {

	@Autowired
	PedidoServico pedidoServ;

	@Autowired
	ArquivoService arquivoServ;

	RestTemplate restTemplate = new RestTemplate();

	@PostMapping("/notificationCode")
	public ResponseEntity<?> receiveNotification(@RequestParam("notificationCode") String notificacaoCode) {

		System.out.println("Received notificationCode: " + notificacaoCode);

		arquivoServ.escreverCodigo(notificacaoCode);

		String urlProcess = pedidoServ.urlProcess(notificacaoCode);

		try {
			// Realiza a requisicao GET
			ResponseEntity<String> response = restTemplate.getForEntity(urlProcess, String.class);
			return ResponseEntity.ok(response.getBody());
		} catch (Exception e) {
			e.printStackTrace();
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Erro ao processar notificação.");
		}
	}

	@GetMapping("/processar-notificacao")
	public ResponseEntity<?> buscarPedido(@RequestParam("notificacaoCode") String notificacaoCode) {

		String url = pedidoServ.urlGet(notificacaoCode);

		try {
			// Realiza a requisicao GET
			ResponseEntity<String> response = restTemplate.getForEntity(url, String.class);
			String xmlResponse = response.getBody();

			Item item = pedidoServ.xmlParaPedido(xmlResponse);

			arquivoServ.escreverPedido(item);

			String message = "Salvo";
			return ResponseEntity.ok(message);

		} catch (Exception e) {
			e.printStackTrace();
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Erro ao consultar notificação.");
		}
	}

	@PostMapping("/notificacoes")
	public ResponseEntity<?> processarNotificacoes(@RequestBody String json) {
		// Processar os itens
		pedidoServ.processarItens(json);
		
		return new ResponseEntity<>("Sucesso!!", HttpStatus.CREATED);
	}

	

}
